# -*- coding: utf-8 -*-
#qpy:2
import vklogic as vkl
from utils import parse_input

from threading import Thread
import random
import requests
import time
import json
import re

__version__ = '0.0.4'
__author__ = 'Eugene Ershov - http://vk.com/fogapod'
__source__ = 'https://github.com/Fogapod/ChatBot/'
	
__info__ = '''
–í–µ—Ä—Å–∏—è: {ver}-demo
(demo –≤–µ—Ä—Å–∏—è –Ω–µ –º–æ–∂–µ—Ç –≤–µ—Å—Ç–º –¥–∏–∞–ª–æ–≥)

–Ø —É–º–µ—é:
*–ì–æ–≤–æ—Ä–∏—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –ø–æ–ø—Ä–æ—Å–∏—Ç–µ
(/say ... |/—Å–∫–∞–∂–∏ ... )
*–í—ã–∑—ã–≤–∞—Ç—å –ø–æ–º–æ—â—å
(/help |/–ø–æ–º–æ—â—å )
*–í–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥
(/... )

–í –∫–æ–Ω—Ü–µ –º–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å—Ç–∞–≤–∏—Ç—Å—è –∑–Ω–∞–∫ –≤–µ—Ä—Ö–Ω–µ–π –∫–∞–≤—ã—á–∫–∏'

–ê–≤—Ç–æ—Ä: {author}
–ú–æ–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥: {source}
'''.format(\
	ver = __version__, author = __author__, source = __source__
)

# qpy
import logging
logging.captureWarnings(True)
import sys
reload(sys)
sys.setdefaultencoding('utf-8')
p = '/storage/emulated/0/'
# qpy

client = vkl.Client()
	
while not client.authorization():
	continue

client.save_full_message_history()
	
url = client.make_url() # url for long polling
	
long_poll_response = None

def listen_long_poll():
	global long_poll_response
	global url

	print('{decor}{txt}{decor}'.format(decor='-'*6, txt='Listening long poll'))

	while True:
		if not long_poll_response:
			long_poll_response = requests.post(url)
		else:
			continue # –ø—Ä–æ—à–ª—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω

long_poll_process = Thread(target=listen_long_poll)

def main():
	print(__info__)

	global long_poll_response
	global url
	
	long_poll_process.start()
	last_rnd_id = 0
	while True:
		if not long_poll_response:
			time.sleep(0.1)
			continue

		response = json.loads(long_poll_response.content)
		url = client.make_url(keep_ts=response['ts'])
		long_poll_response = None
		print(response)
   
		for update in response['updates']:
			if update[0] == 4 and\
					update[7] != last_rnd_id and\
					update[6] != '':
			# response == message
			# message != last_message
			# message != ''
				text = update[6]
				mark_msg = True
				if text.lower() == u'–µ—Ä—à–æ–≤' or\
						text.lower() == u'–∂–µ–Ω—è' or\
						text.lower() == u'–∂–µ–Ω—å' or\
						text.lower() == u'–∂–µ–Ω—å–∫–∞' or\
						text.lower() == u'–∂–µ–∫–∞' or\
						text.lower() == u'–∂—ç–∫–∞':
					text = '–ê'
					mark_msg = False

				elif 'HALP' in text:
					text = '–ö–æ–º—É –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?!'

				elif re.sub('^( )*', '', text).startswith('/'):	

					if text.startswith('/'):
						mark_msg = False
						text = text[1:]

					text = parse_input(text, replace_vkurl=False, replace_nl=False)
					words = text.split()

					if not words: 
						words = ' '

					if re.match(u'^((help)|(–ø–æ–º–æ—â—å)|(info)|(–∏–Ω—Ñ–æ)|(–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)|\?)',\
							words[0].lower()):
						text = __info__
					elif re.match(u'^((—Å–∫–∞–∂–∏)|(say))', words[0].lower()):
						del words[0]
						text = ' '.join(words)
					else:
						text = '–ü–æ–ø–∫–∞ –º–æ–ª–æ–¥–µ—Üüêî' if random.randint(0,1) else '–ü–æ–ø–∫–∞ –¥—É—Ä–∞–∫üêî'

				else:
					continue

				last_rnd_id = update[7] + 1
				client.reply(
					uid = update[3],
					text = text + "'" if mark_msg else text,
					rnd_id = last_rnd_id
				)
				reply_count += 1

if __name__ == '__main__':
	main()
