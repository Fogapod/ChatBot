# -*- coding: utf-8 -*-
import vklogic as vkl

import random
import requests
import time
import json
import re

__version__ = '0.1.0'
__author__ = 'Eugene Ershov http://vk.com/fogapod'

__info__ =\
'''
–í–µ—Ä—Å–∏—è: {ver}
–Ø —É–º–µ—é:
*–ì–æ–≤–æ—Ä–∏—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –ø–æ–ø—Ä–æ—Å–∏—Ç–µ
(/say text|/—Å–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç)
*–í—ã–∑—ã–≤–∞—Ç—å –ø–æ–º–æ—â—å
(/help|/–ø–æ–º–æ—â—å)
–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –±–µ–∑ –∫–∞–≤—ã—á–∫–∏' –≤ –∫–æ–Ω—Ü–µ: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ //

–ê–≤—Ç–æ—Ä: {author}'''.format(\
ver = __version__,
author = __author__
)

# qpy
import sys
reload(sys)
#sys.setdefaultencoding('utf-8')
import logging
logging.captureWarnings(True)

def main():
	client = vkl.Client()
	
	client.authorize()
	#client.save_full_message_history()

	url = client.make_url()

	last_rnd_id = 1
	print(__info__)
	print('\n{dec}{txt}{dec}'.format(dec='-'*5, txt='Listening long poll'))
	while True:
		response = requests.post(url)
		response = json.loads(response.content)
		print(response)
		url = client.make_url(keep_ts=response['ts'])

		for update in response['updates']:
			if update[0] is 4 and update[7] != last_rnd_id and update[3]:
				text = update[6]
				mark_msg = True
				if text.lower() == u'–µ—Ä—à–æ–≤' or\
						text.lower() == u'–∂–µ–Ω—è' or\
						text.lower() == u'–∂–µ–Ω—å' or\
						text.lower() == u'–∂–µ–Ω—å–∫–∞' or\
						text.lower() == u'–∂–µ–∫–∞' or\
						text.lower() == u'–∂—ç–∫–∞':
					text = '–ê'
					mark_msg = False
				elif 'HALP' in text:
					text = '–ö–æ–º—É –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?!'
				elif re.sub('^( )*', '', text).startswith(u'/'):
					text = text[1:]
					if text.startswith(u'/'):
						text = text[1:]
						mark_msg = False
					words = text.split()
					if not text: 
						words = ' '
					if re.match(u'^((help)|(–ø–æ–º–æ—â—å)|(info)|(–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)|(–∏–Ω—Ñ–æ)|\?)',\
						words[0].lower()):
						text = __info__
					elif re.match(u'^((—Å–∫–∞–∂–∏)|(say))', words[0].lower()):
						del words[0]
						text = ' '.join(words)
					else:
						text = '–ü–æ–ø–∫–∞ –º–æ–ª–æ–¥–µ—Üüêî' if random.randint(0,1) else '–ü–æ–ø–∫–∞ –¥—É—Ä–∞–∫üêî'
				else:
					continue

				client.reply(
					uid = update[3],
					text = text + "'" if mark_msg else text,
					rnd_id = update[7] + 1
				)
				last_rnd_id = update[7] + 1

if __name__ == '__main__':
	main()